# Dockerfile SIMPLIFICADO para Dify no CapRover
# APENAS API Python - CapRover cuida do resto

FROM python:3.12-slim-bookworm AS base

WORKDIR /app/api

# Install uv
ENV UV_VERSION=0.8.9
RUN pip install --no-cache-dir uv==${UV_VERSION}

# Install system dependencies
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        gcc g++ libc-dev libffi-dev libgmp-dev libmpfr-dev libmpc-dev \
        curl postgresql-client \
        # API dependencies
        libgmp-dev libmpfr-dev libmpc-dev \
        fonts-noto-cjk media-types libmagic1 \
    && rm -rf /var/lib/apt/lists/*

# Copy and install Python dependencies
COPY api/pyproject.toml api/uv.lock ./
RUN uv sync --locked --no-dev

# Set environment variables
ENV LANG=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8
ENV PYTHONIOENCODING=utf-8
ENV TZ=UTC
ENV FLASK_APP=app.py
ENV EDITION=SELF_HOSTED
ENV DEPLOY_ENV=PRODUCTION

# Create directories
RUN mkdir -p /app/storage /app/logs

# Copy Python environment
ENV VIRTUAL_ENV=/app/api/.venv
ENV PATH="${VIRTUAL_ENV}/bin:${PATH}"

# Copy API source code
COPY api/ /app/api/
WORKDIR /app/api

# Download NLTK data
RUN python -c "import nltk; nltk.download('punkt'); nltk.download('averaged_perceptron_tagger')"

# Setup tiktoken cache
ENV TIKTOKEN_CACHE_DIR=/app/api/.tiktoken_cache
RUN python -c "import tiktoken; tiktoken.encoding_for_model('gpt2')"

# Create startup script
COPY docker/start-simple.sh /start.sh
RUN chmod +x /start.sh

# Expose port 5001 - API direto
EXPOSE 5001

WORKDIR /app/api
CMD ["/start.sh"]
